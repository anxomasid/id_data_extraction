# -*- coding: utf-8 -*-
"""extract_dni_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oxY35BkbWR5x_CIJ9fohRlnZNgMPnzwM

## Introducción
"""

!sudo apt install tesseract-ocr
!pip install pytesseract
!pip install PyMuPDF

import pytesseract
import shutil
import random
import os
try:
 from PIL import Image
except ImportError:
 import Image
from google.colab import drive
import glob
import fitz

drive.mount('/content/drive')

#os.chdir('/content/drive/My Drive/Securitas/Project Scarface')
os.chdir('/content/drive/My Drive/Securitas/Project Scarface')

list_files = glob.glob("/content/drive/My Drive/Securitas/Project Scarface/extract_image/*.pdf")

list_files

"""## Extracción de imágenes"""

''' Ejemplo '''

j = '/content/drive/My Drive/Securitas/Project Scarface/extract_image/DOCALTA264445949696.pdf'
i = 16 #nos quedamos tan solo con la página 16
doc = fitz.open(j) #leer documento .pdf
for img in doc.getPageImageList(i): #para la página concreta y las imágenes 1 y 2
  xref = img[0]
  pix = fitz.Pixmap(doc, xref)
  pix.writePNG("p%s-%s.png" % (i, xref))

'''General'''

for j in list_files:
  i = 16 #nos quedamos tan solo con la página 16
  doc = fitz.open(j) #leer documento .pdf
  for img in doc.getPageImageList(i): #para la página concreta y las imágenes 1 y 2
      xref = img[0]
      pix = fitz.Pixmap(doc, xref)
      pix.writePNG("p%s-%s.png" % (i, xref))

''' Original '''

import fitz
doc = fitz.open("file.pdf")
for i in range(len(doc)):
    for img in doc.getPageImageList(i):
        xref = img[0]
        pix = fitz.Pixmap(doc, xref)
        if pix.n < 5:       # this is GRAY or RGB
            pix.writePNG("p%s-%s.png" % (i, xref))
        else:               # CMYK: convert to RGB first
            pix1 = fitz.Pixmap(fitz.csRGB, pix)
            pix1.writePNG("p%s-%s.png" % (i, xref))
            pix1 = None
        pix = None

"""## OCR: extracción de texto"""

def ocr_core_file(filename):
    """
    This function will handle the core OCR processing of images.
    """
    text = pytesseract.image_to_string(Image.open(filename))
    return text

def ocr_core_object(object):
    """
    This function will handle the core OCR processing of images.
    """
    text = pytesseract.image_to_string(object)
    return text

colorImage  = Image.open('p16-66.png')
rotated     = colorImage.rotate(95)

ocr_core_file('/content/drive/My Drive/Securitas/Project Scarface/p16-66RO.png')

ocr_core_object(rotated)

